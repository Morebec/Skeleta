/**
 * The grid lays out its nested elements side by side and wraps them into rows when they overflow.
 * The grid has a limitation that requires to define the minimum width so
 * that it can know when to wrap elements, which is controlled by the `grid-template-colums`
 * property using the value `repeat(auto-fit, minmax(min(min-wdith, 100%), 1fr))`.
 * Where the min with uses the line-length css custom peroperty.
 **/
@include sklComponent('grid') {
    display: grid;
    $minWidth: sklGetVar('line-length');
    grid-template-columns: repeat(auto-fit, minmax(min(#{$minWidth}), 100%), 1fr);

    & > * {
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 30ch;
    }
}

@include sklGapModifier('grid');
@for $i from $skl-minUnitScaleValue through $skl-maxUnitScaleValue {
    $minWidth: sklGetVar(unit#{$i});
    @include sklModifier('grid', min-width#{$i}) {
        grid-template-columns: repeat(auto-fit, minmax(min(var(--#{$minWidth}), 100%), 1fr));
    }
}

// SPLIT
@include sklComponent('grid__split') {
    &+* {
        margin-left: auto;
    }

    flex-grow: 1;
}